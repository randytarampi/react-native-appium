notifications:
  email: false
os: linux
dist: trusty # NOTE-RT: This needs to be `trusty`, android builds just hang on `xenial` :\
env:
  global:
    - ANDROID_PLATFORM_VERSION=9
    - ANDROID_API_VERSION=28
    - ANDROID_BUILD_TOOLS_VERSION=28.0.3
    - ANDROID_EMULATOR_PLATFORM_VERSION=9.0
    - ANDROID_EMULATOR_API_VERSION=25
    - ANDROID_EMULATOR_ABI=arm64-v8a
jobs:
  include:
    - name: Unit tests
      language: node_js
      node_js: 10
      cache: yarn
    - name: E2E tests (android)
      language: android
      jdk: oraclejdk8
      before_cache:
        - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
        - rm -fr $HOME/.gradle/caches/*/plugin-resolution/
      cache:
        yarn: true
        directories:
          - $HOME/.gradle/caches/
          - $HOME/.gradle/wrapper/
          - $HOME/.android/build-cache
      android:
        components:
          - tools
          - android-$ANDROID_EMULATOR_API_VERSION # NOTE-RT: Per https://medium.com/@nocnoc/android-emulators-in-thcloud-f39e11c15bfa
          - emulator
          - tools
          - platform-tools
          - build-tools-$ANDROID_BUILD_TOOLS_VERSION
          - build-tools-25.0.3
          - android-$ANDROID_API_VERSION
          - extra-google-google_play_services
          - extra-google-m2repository
          - extra-android-m2repository
          - addon-google_apis-google-$ANDROID_API_VERSION
          - sys-img-$ANDROID_EMULATOR_ABI-google_apis-$ANDROID_EMULATOR_API_VERSION # NOTE-RT: Per https://medium.com/@nocnoc/android-emulators-in-thcloud-f39e11c15bfa
      before_install:
        - |
          if [ $TRAVIS_OS_NAME == "linux" ]; then
            export DISPLAY=:99.0
            sh -e /etc/init.d/xvfb start
            sleep 3 # give xvfb some time to start
          fi
        - openssl aes-256-cbc -K $encrypted_78b6aab41b54_key -iv $encrypted_78b6aab41b54_iv -in android/app/my-release-key.keystore.enc -out android/app/my-release-key.keystore -d
        - export NODE_VERSION=${TRAVIS_NODE_VERSION:=10}
        - nvm install $NODE_VERSION
        - npm install -g yarn
      install:
        - yarn install
        - npm run build:android
      before_script:
        - echo no | android create avd -f -n $(node -p 'require("./package.json").name') -t android-$ANDROID_EMULATOR_API_VERSION --abi google_apis/$ANDROID_EMULATOR_ABI # NOTE-RT: This should really be `yarn run emulator:android:create`
        # NOTE-RT: The following here should really be `npm run pree2e`
        - emulator -avd $(node -p 'require("./package.json").name') -gpu swiftshader -no-boot-anim -no-window -no-audio -no-snapshot -no-accel -camera-back none -camera-front none -memory 2048 & echo $! > /tmp/$(node -p 'require("./package.json").name').emulator.android.pid; echo "Started Android emulator (`cat /tmp/$(node -p 'require("./package.json").name').emulator.android.pid`) from /tmp/$(node -p 'require("./package.json").name').emulator.android.pid"
        - ./bin/android-wait-for-emulator
        - adb wait-for-device get-serialno
        - adb shell input keyevent 82 &
        - npm run appium:kill
        - npm run appium:start
      script:
        - ANDROID_DEVICE_NAME=$(node -p 'require("./package.json").name') ANDROID_PLATFORM_VERSION=$ANDROID_EMULATOR_PLATFORM_VERSION npm run appium:test
      after_script:
        - npm run poste2e # NOTE-RT: Make sure we kill things and clean up
        - android delete avd -n $(node -p 'require("./package.json").name') # NOTE-RT: This should really be `npm run emulator:android:delete`
#    - name: E2E tests (iOS)
#      language: objective-c
#      podfile: ios/Podfile
#      osx_image: xcode10.2
#      cache:
#        - yarn
#        - cocoapods
#      before_install:
#        - export NODE_VERSION=${TRAVIS_NODE_VERSION:=10}
#        - nvm install $NODE_VERSION
#        - npm install -g yarn
#      install:
#        - yarn install
#        - pushd ios && pod install && popd ios

